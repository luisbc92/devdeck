.program smd
.side_set 1

; Serial TX
; Data on OUT pin 0
; Clock on side-set pin 0

.wrap_target
    out pins, 1     side 0  ; stall here if no data (clock low)
    nop             side 1
.wrap

% c-sdk {

    static inline void smd_program_init(PIO pio, uint sm, uint offset, uint clk_pin, uint data_pin, float clk_div)
    {
        pio_gpio_init(pio, data_pin);
        pio_gpio_init(pio, clk_pin);
        pio_sm_set_consecutive_pindirs(pio, sm, data_pin, 1, true);
        pio_sm_set_consecutive_pindirs(pio, sm, clk_pin, 1, true);
        pio_sm_config c = smd_program_get_default_config(offset);
        sm_config_set_sideset_pins(&c, clk_pin);
        sm_config_set_out_pins(&c, data_pin, 1);
        sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
        sm_config_set_clkdiv(&c, clk_div);
        sm_config_set_out_shift(&c, true, true, 8);     // we need LSB
        pio_sm_init(pio, sm, offset, &c);
        pio_sm_set_enabled(pio, sm, true);
    }

    static inline void smd_put(PIO pio, uint sm, uint8_t x)
    {
        pio_sm_put_blocking(pio, sm, x);
    }

%}